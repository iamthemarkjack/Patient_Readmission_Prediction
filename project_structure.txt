Patient_Readmission_Prediction
├── airflow                            # Directory containing airflow components
│   ├── config                         # Airflow configurations
│   ├── dags                           
│   │   ├── load_data.py               # DAG to load data
│   │   ├── process_data.py            # DAG to add features
│   │   └── utils                      
│   │       ├── add_feature.py         # Function to add features
│   ├── docker-compose.yaml            # docker-compose yaml file for Airflow
│   ├── logs                           # Airflow logs
│   └── plugins                        # Airflow plugins
├── data                              
│   ├── dvc_auto_push.sh               # Shell script to push data automatically to dvc
│   ├── processed                       
│   │   ├── .gitignore
│   │   └── processed_data.csv.dvc     # dvc file of the processed_data.csv
│   └── raw
├── .dvc
├── .dvcignore
├── flowchart.drawio                   # Flowchart explaining the ML pipeline
├── .git
├── .gitignore
├── LICENSE
├── models                             # Model building
│   ├── config
│   │   └── model_params.yml           # Different models and hyperparameters to run experiments
│   └── training
│       ├── mlruns
│       └── train_models.py            # Main script for model training
├── monitoring
├── notebooks   
│   ├── analysis_src                   # Contains scripts to run analysis
│   │   ├── basic_data_inspection.py
│   │   ├── missing_values_analysis.py
│   │   ├── plot_analysis.py
│   ├── EDA.ipynb                      # Notebook containing EDA    
│   └── Test.ipynb                     # Notebook where we test our feature engineering
├── project_structure.txt              # This file
├── Design_Document.pdf                # Talks about Low and High Level Design Choices
├── User_Manual.pdf                    # User Manual for the AI Application
├── flowchart.drawio                   # Flowchart drawio file
├── flowchart.drawio.png               # PNG Flowchart drawio file
├── README.md                           
├── requirements.txt                   # Eequirements for running the experiments and notebooks
├── serving
│   ├── backend                        # Backend of the AI Application
│   │   ├── app.py                     # Main RESTAPI script
│   │   ├── Dockerfile                 # Dockerfile for the backend
│   │   ├── pickles                    # Contains the pickled files of best model, encoders and scaler
│   │   │   ├── best_model.pkl
│   │   │   ├── encoders.pkl
│   │   │   └── standard_scaler.pkl
│   │   ├── metadata                   # Contains the metadata json files
│   │   │   ├── model_registry_info.json
│   │   │   └── preprocessing_metadata.json
│   │   └── requirements.txt           # Requirements for backend
│   ├── frontend                       # Frontend of the AI Application
│   │   ├── Dockerfile                 # Dockerfile for the frontend
│   │   ├── requirements.txt           # Requirements for the frontend
│   │   └── streamlit.py               # Main streamlit app script
│   ├── docker-compose.yml             # docker-compose yaml for starting the application services
└── tests                              # Contains unit tests
    └── test_feature_adders.py